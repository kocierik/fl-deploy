apiVersion: apps/v1
kind: Deployment
metadata:
  name: fl-core
  namespace: fl
  labels:
    app: fl-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fl-core
  template:
    metadata:
      labels:
        app: fl-core
    spec:
      serviceAccountName: fl-svc-account
      restartPolicy: "Always"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: fl
                operator: In
                values:
                - "core"
      containers:
      - name: core
        image: "ghcr.io/funlessdev/core:latest"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
        - containerPort: 4369
        env:
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              name: fl-core-secret-key-base
              key: secret_key_base
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: fl-core-secret-postgres-user
              key: secret_key_user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fl-core-secret-postgres-password
              key: secret_key_password
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DEPLOY_ENV
          value: "kubernetes"
        volumeMounts:
          - name: postgres-data
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data-pvc
      initContainers:
        - name: wait-for-postgres
          image: postgres:latest
          command: ["sh", "-c", "until pg_isready -h postgres -U postgres; do sleep 1; done"]
---
apiVersion: v1
kind: Service
metadata:
  name: fl-core-service
  namespace: fl
  labels:
    app: fl-core
spec:
  type: NodePort
  selector:
    app: fl-core
  ports:
    - name: http
      port: 4000
      targetPort: 4000
      nodePort: 30210
      protocol: TCP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
  namespace: fl
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

